{"version":3,"sources":["Ghost.tsx","SingleBin.tsx","MultiBin.tsx","NestedBins.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["sleep","ms","Promise","resolve","setTimeout","ContentElement","_ref","_ref$className","className","style","handleRef","value","ref","React","_jsxs","concat","children","_jsx","backgroundColor","color","postProcess","props","_objectSpread","defaultPostProcessor","deltaY","current","clientHeight","Content","_ref2","draggedProps","_React$useState","_React$useState2","_slicedToArray","changeColor","Draggable","delay","dragProps","onDragStart","document","body","cursor","onDragEnd","_ref3","isDetached","Droppable","onDrop","_ref5","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref4","wrap","_context","prev","next","stop","_x","apply","arguments","method","state","nodeRef","a","getBoundingClientRect","x","left","right","disabled","withDragProps","_ref7","isHovered","display","textAlign","position","width","undefined","randomColors","Array","fill","map","randomPart","Math","floor","random","randomColor","GhostExample","DragDropContainer","_ref8","WithDragProps","_ref9","i","GhostExampleTitle","initialValues","_","SimpleExample","dropped","changeDropped","values","filter","v","indexOf","length","_toConsumableArray","border","join","colors","maxDroppedPerBin","Bin","handleDrop","onFill","droppedCount","changeDroppedCount","validateDragProps","_useDroppable","useDroppable","useDragProps","dragPropsValid","filled","added","visibility","top","bottom","background","transition","_React$useState3","_React$useState4","changeValues","_React$useState5","_React$useState6","Target","changeValue","changeValueFactory","_Fragment","margin","detachDelta","App","_React$Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","key","NavLink","to","Switch","Route","path","component","SingleBin","MultiBin","NestedBins","Ghost","Redirect","Boolean","window","location","hostname","match","ReactDOM","HashRouter","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iTAUMA,EAAQ,SAACC,GACb,OAAO,IAAIC,SAAc,SAACC,GACxBC,YAAW,WACTD,GACF,GAAGF,EACL,GACF,EAUMI,EAAiB,SAAHC,GAA0D,IAADC,EAAAD,EAAnDE,iBAAS,IAAAD,EAAG,GAAEA,EAAEE,EAAKH,EAALG,MAAOC,EAASJ,EAATI,UAAWC,EAAKL,EAALK,MACpDC,EAAMC,SAAa,MACzB,OACEC,eAAA,QAAML,MAAOA,EAAOD,UAAS,QAAAO,OAAUP,GAAYQ,SAAA,CACjDF,eAAA,OAAKN,UAAU,SAASI,IAAKF,EAAUM,SAAA,CACrCC,cAAA,OAAKT,UAAU,MAAMC,MAAO,CAAES,gBAAiBT,EAAMU,SACrDF,cAAA,OAAKT,UAAU,MAAMC,MAAO,CAAES,gBAAiBT,EAAMU,SACrDF,cAAA,OAAKT,UAAU,MAAMC,MAAO,CAAES,gBAAiBT,EAAMU,YAEvDF,cAAA,QAAML,IAAKA,EAAII,SAAEL,MAGvB,EASMS,EAAc,SAACC,EAAYT,GAC/B,OAAAU,wBAAA,GACKC,+BAAqBF,EAAOT,IAAI,IACnCY,OAAQZ,GAAOA,EAAIa,QAAUb,EAAIa,QAAQC,aAAe,GAE5D,EAEMC,EAAU,SAAHC,GAAiE,IAA3DV,EAAeU,EAAfV,gBAAiBP,EAAKiB,EAALjB,MAAOkB,EAAYD,EAAZC,aACzCC,EAA6BjB,aAAwBkB,EAAAC,YAAAF,EAAA,GAA9CX,EAAKY,EAAA,GAAEE,EAAWF,EAAA,GAEzB,OACEd,cAACiB,YAAS,CACRC,MAAO,GACPC,UAAWlB,EACXE,YAAaA,EACbiB,YAAa,WACXC,SAASC,KAAK9B,MAAM+B,OAAS,WAC/B,EACAC,UAAW,WACTH,SAASC,KAAK9B,MAAM+B,OAAS,SAC/B,EAAExB,SAED,SAAA0B,GAAA,IAAGhC,EAASgC,EAAThC,UAAWiC,EAAUD,EAAVC,WAAU,OACV,MAAbjC,EACEO,cAAC2B,YAAS,CACRC,OAAM,eAAAC,EAAAC,YAAAC,cAAAC,MAAE,SAAAC,EAAAC,GAAA,IAAAf,EAAA,OAAAY,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAkB,OAATnB,EAASe,EAATf,UAASiB,EAAAE,KAAA,EAClBvD,EAAM,GAAG,KAAD,EACVoC,IAAclB,GAChBe,EAAYG,GACb,wBAAAiB,EAAAG,OAAA,GAAAN,EAAA,KACF,gBAAAO,GAAA,OAAAX,EAAAY,MAAA,KAAAC,UAAA,EALK,GAMNC,OAAQ,SAACC,EAAOC,GACd,IAAMC,EAAID,EAAQrC,QAAQuC,wBAClBC,EAAMJ,EAAMpC,QAAZwC,EAER,OAAOF,EAAEG,MAAQD,GAAKF,EAAEI,OAASF,CACnC,EACAG,SAAuB,MAAb1D,EACV2D,eAAe,EAAMrD,SAEpB,SAAAsD,GAAA,IAAGC,EAASD,EAATC,UAAW3D,EAAG0D,EAAH1D,IAAG,OAChBK,cAAA,OACER,MAAO,CACL+D,QAAS,eACTC,UAAW,OACXC,SAAU,YAEZ9D,IAAKA,EAAII,SAGTC,cAACZ,EAAc,CACbM,MACEkB,EACIA,IAAiBX,EACfqD,EACE,WACA,cACFA,EACE,YACA,WACJ5D,EAENF,MAAO,CACLS,kBACAC,MAAOwB,EAAa,OAASxB,EAC7BwD,MAAO,SAETnE,UACE+D,GAAa1C,IAAiBX,EAC1B,eACA0D,EAENlE,UAAWA,KAET,IAIVO,cAACZ,EAAc,CACbM,MAAOA,EACPF,MAAO,CACLS,kBACAC,QACAwD,MAAO,UAGZ,GAIT,EAEME,EAAeC,MAAM,KACxBC,KAAK,GACLC,KAAI,kBA3Ha,WAClB,IAAMC,EAAa,WAAH,OAASC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAgB,EACzD,MAAO,OAASH,IAAe,IAAMA,IAAe,IAAMA,IAAe,GAC3E,CAwHaI,EAAa,IAEbC,EAAe,WAC1B,OACErE,cAACsE,oBAAiB,CAAC/E,UAAU,kBAAiBQ,SAC3C,SAAAwE,GAAA,IAAG5E,EAAG4E,EAAH5E,IAAG,OACLK,cAACwE,gBAAa,CAAAzE,SACX,SAAA0E,GAAA,IAAc7D,EAAY6D,EAAvBtD,UAAS,OACXnB,cAAA,OAAKT,UAAU,kBAAkBI,IAAKA,EAAII,SACvC6D,EAAaG,KAAI,SAAC7D,EAAOwE,GAAC,OACzB1E,cAACU,EAAO,CACNT,gBAAiBC,EACjBR,MAAK,UAELkB,aAAcA,GADT8D,EAEL,KAEA,GAEM,GAIxB,EAEaC,EAAoB,WAAH,OAC5B9E,eAAA,KAAAE,SAAA,CAAG,yBACqBC,cAAA,SAAM,oCACKA,cAAA,SAAM,oCACNA,cAAA,SAAM,+BACXA,cAAA,SAAM,eACtBA,cAAA,SAAM,6CACwBA,cAAA,SAAM,kBACjCA,cAAA,SAAM,6BAEnB,EAGS,aASb,OARAJ,aAAgB,WAGd,OAFAyB,SAASC,KAAK9B,MAAMiE,SAAW,QAExB,WACLpC,SAASC,KAAK9B,MAAMiE,SAAW,SACjC,CACF,IAGE5D,eAACD,WAAc,CAAAG,SAAA,CACbC,cAAC2E,EAAiB,IAClB3E,cAACqE,EAAY,MAGlB,E,QC9LKO,EAAgBf,MAAM,IACzBC,UAAKH,GACLI,KAAI,SAACc,EAAGH,GAAC,OAAKA,EAAI,CAAC,IAETI,EAAgB,WAC3B,IAAAjE,EAAiCjB,WAAyB,IAAGkB,EAAAC,YAAAF,EAAA,GAAtDkE,EAAOjE,EAAA,GAAEkE,EAAalE,EAAA,GACvBmE,EAASrF,WACb,kBAAMgF,EAAcM,QAAO,SAACC,GAAC,OAAKJ,EAAQK,QAAQD,GAAK,CAAC,GAAC,GACzD,CAACJ,IASH,OACElF,eAACyE,oBAAiB,CAAC/E,UAAU,wBAAuBQ,SAAA,CAClDC,cAAA,OAAKT,UAAU,wBAAuBQ,SACnCkF,EAAOlB,KAAI,SAACW,GAAC,OACZ1E,cAACiB,YAAS,CAASE,UAAWuD,EAAGnF,UAAU,cAAaQ,SACtDF,eAAA,OAAKN,UAAU,cAAaQ,SAAA,CAC1BC,cAAA,QAAMT,UAAU,SAAQQ,SAAC,OACzBC,cAAA,QAAAD,SAAO2E,QAHKA,EAKJ,MAGfO,EAAOI,OAAS,EACfrF,cAAC2B,YAAS,CAACC,OAnBgD,SAAHvC,GAEvD,IADL8B,EAAS9B,EAAT8B,UAEA6D,EAAc,GAADlF,OAAAwF,YAAKP,GAAO,CAAE5D,IAC7B,EAegCpB,SACvB,SAAAY,GAAA,IAAG2C,EAAS3C,EAAT2C,UAAW3D,EAAGgB,EAAHhB,IAAKwB,EAASR,EAATQ,UAAS,OAC3BtB,eAAA,OACEN,UAAU,aACVI,IAAKA,EACLH,MAAO,CACLS,gBAAiBqD,EACb,6BACAK,EACJ4B,OAAQpE,EAAY,uBAAoBwC,GACxC5D,SAAA,CAEDoB,EAAY,eAAiB,iBAC7B8D,EAAOI,OAAS,GACfxF,eAAA,OAAAE,SAAA,CAAK,oBAAkBgF,EAAQS,KAAK,MAAM,SAExC,IAIVxF,cAAA,OAAKT,UAAU,aAAYQ,SAAC,gCAIpC,EAEe,oBACbF,eAACD,WAAc,CAAAG,SAAA,CACbF,eAAA,KAAAE,SAAA,CAAG,sDAEDC,cAAA,YAEFA,cAAC8E,EAAa,MAEjB,EC3DKW,EAAS,CAAC,OAAQ,kBAElBb,EAAgBf,MAAsB,GAAhB4B,EAAOJ,QAChCvB,UAAKH,GACLI,KAAI,SAACc,EAAGH,GAAC,OAAKA,EAAI,CAAC,IAEhBgB,EAAmBd,EAAcS,OAASI,EAAOJ,OAOjDM,EAAM,SAAHtG,GAQF,IAPLuG,EAAUvG,EAAVuG,WACA1F,EAAKb,EAALa,MACA2F,EAAMxG,EAANwG,OAMMlG,EAAMC,SAAa,MACzBiB,EAA2CjB,WAAe,GAAEkB,EAAAC,YAAAF,EAAA,GAArDiF,EAAYhF,EAAA,GAAEiF,EAAkBjF,EAAA,GAEjCkF,EAAoBpG,eACxB,SAACQ,GAAgB,OAAc,MAATA,GAAiBA,EAAMF,QAAUA,CAAK,GAC5D,CAACA,IAGH+F,EAAsBC,uBAAavG,EAAK,CACtCiC,OAAQ,SAAAjB,GAAoB,IAAjBQ,EAASR,EAATQ,UACL6E,EAAkB7E,KACpB4E,EAAmBD,EAAe,GAClCF,EAAWzE,GAEf,IANMmC,EAAS2C,EAAT3C,UASFnC,EAAYgF,yBAEZC,EAAiBxG,WAAc,WACnC,OAAOoG,EAAkB7E,EAC3B,GAAG,CAACA,EAAW6E,IAETK,EAASzG,WAAc,WAC3B,OAAQ,IAAMkG,EAAgBJ,CAChC,GAAG,CAACI,IAEEQ,EAAQ1G,WAAc,WAC1B,OAAO0D,EAAY,IAAMoC,EAAmB,CAC9C,GAAG,CAACpC,IAMJ,OAJA1D,aAAgB,WACVyG,GAAQR,GACd,GAAG,CAACQ,EAAQR,IAGVhG,eAAA,OACEN,UAAU,aACVI,IAAKA,EACLH,MAAO,CACL+G,WAAYH,OAAiBzC,EAAY,SACzC4B,OAAQpE,EAAY,kBAAoB,yBACxCsC,SAAU,YACV1D,SAAA,CAEFF,eAAA,OACEL,MAAO,CACLiE,SAAU,WACV+C,IAAK,EACLC,OAAQ,EACRxD,KAAM,EACNC,MAAO,EACPK,QAAS,QACTxD,SAAA,CAEFC,cAAA,OACER,MAAO,CACLkE,MAAM,GAAD5D,OAAKuG,EAAM,KAChBK,WAAYxG,EACZyG,WAAY,qBAGhB3G,cAAA,OACER,MAAO,CACLkE,MAAM,GAAD5D,OAAKwG,EAAK,KACfI,WAAW,6BAAD5G,OAA+BI,EAAK,WAC9CyG,WAAY,wBAIlB3G,cAAA,OAAKR,MAAO,CAAEiE,SAAU,YAAa1D,SACnCC,cAAA,QAAMR,MAAO,CAAEU,SAAQH,SAAEG,QAIjC,EAEa4E,EAAgB,WAC3B,IAAA8B,EAA+BhH,WAAegF,GAAciC,EAAA9F,YAAA6F,EAAA,GAArD3B,EAAM4B,EAAA,GAAEC,EAAYD,EAAA,GAC3BE,EAA6BnH,aAAwBoH,EAAAjG,YAAAgG,EAAA,GAA9C7G,EAAK8G,EAAA,GAAEhG,EAAWgG,EAAA,GAEnBpB,EAAa,SAACzE,GAClB2F,EAAa7B,EAAOC,QAAO,SAACC,GAAC,OAAKA,IAAMhE,EAAUuD,CAAC,IACrD,EAEA,OACE7E,eAACyE,oBAAiB,CAAC/E,UAAU,wBAAuBQ,SAAA,CAClDC,cAAA,OAAKT,UAAU,wBAAuBQ,SACnCkF,EAAOlB,KAAI,SAACW,GAAC,OACZ1E,cAACiB,YAAS,CAERE,UAAW,CAAEjB,MAAOuF,EAAOf,EAAIe,EAAOJ,QAASX,KAC/CnF,UAAU,cAAaQ,SAEvBC,cAAA,OACET,UAAU,cACVC,MAAO,CAAES,gBAAiBwF,EAAOf,EAAIe,EAAOJ,SAAUtF,SAEtDC,cAAA,QAAMR,MAAO,CAAEU,MAAO,QAASH,SAAE2E,OAR9BA,EAUK,MAGfO,EAAOI,OAAS,EACfrF,cAAA,OAAKT,UAAU,iBAAgBQ,SAC5BuF,YAAIzB,MAAM4B,EAAOJ,SAAStB,KAAI,SAACc,EAAGH,GAAC,OAClC1E,cAAC2F,EAAG,CACFC,WAAYA,EACZ1F,MAAOuF,EAAOf,EAAIe,EAAOJ,QACzBQ,OAAQ,WACO,MAAT3F,GAAec,EAAYyE,EAAOf,EAAIe,EAAOJ,QACnD,GACKX,EACL,MAIN7E,eAAA,OAAKN,UAAU,aAAYQ,SAAA,CACzBC,cAAA,QAAMR,MAAO,CAAEU,SAAQH,SAAC,qBACxBC,cAAA,QAAAD,SAAM,kBAKhB,EAEe,oBACbF,eAACD,WAAc,CAAAG,SAAA,CACbF,eAAA,KAAAE,SAAA,CAAG,2EAEDC,cAAA,YAEFA,cAAC8E,EAAa,MAEjB,ECjKKmC,EAAS,SAAH5H,GAAA,IACVK,EAAKL,EAALK,MACAQ,EAAKb,EAALa,MACAgH,EAAW7H,EAAX6H,YACAnH,EAAQV,EAARU,SAAQ,OAORC,cAAC2B,YAAS,CACRC,OAAQ,WACNsF,EAAYxH,EACd,EACA0D,eAAe,EAAMrD,SAEpB,SAAAY,GAAA,IAAG2C,EAAS3C,EAAT2C,UAAW3D,EAAGgB,EAAHhB,IAAKwB,EAASR,EAATQ,UAAS,OAC3BnB,cAAA,OACET,UAAU,SACVI,IAAKA,EACLH,MAAO,CACLS,gBAAiBqD,EAAY,kBAAoBpD,EACjDqF,OAAQpE,EAAY,uBAAoBwC,GACxC5D,SAEDA,GACG,GAEE,EAGD+E,EAAgB,WAC3B,IAAAjE,EAA6BjB,WAAe,GAAEkB,EAAAC,YAAAF,EAAA,GAAvCnB,EAAKoB,EAAA,GAAEoG,EAAWpG,EAAA,GACnBqG,EAAqB,SAAChC,GAAS,OAAK,kBAAM+B,EAAYxH,EAAQyF,EAAG,CAAD,EAEtE,OAAOzF,EAAQ,IACbG,eAAAuH,WAAA,CAAArH,SAAA,CACEF,eAAA,OAAAE,SAAA,CAAK,uBAAqBL,KAC1BM,cAACsE,oBAAiB,CAAC9E,MAAO,CAAEkE,MAAO,IAAK2D,OAAQ,QAAStH,SACvDF,eAAAuH,WAAA,CAAArH,SAAA,CACEC,cAAA,SACAA,cAACiB,YAAS,CACRE,UAAU,UACV5B,UAAU,kBACV+H,YAAa,EACblG,YAAa,WACXC,SAASC,KAAK9B,MAAM+B,OAAS,UAC/B,EACAC,UAAW,WACTH,SAASC,KAAK9B,MAAM+B,OAAS,SAC/B,EAAExB,SAED,SAAA0B,GAAA,IAAGhC,EAASgC,EAAThC,UAAWiC,EAAUD,EAAVC,WAAU,OACvB1B,cAAA,OACEL,IAAKF,EACLF,UAAU,UACVC,MACe,MAAbC,GAAqBiC,EACjB,CAAE6E,WAAY,eACd5C,GAEN,IAGN3D,cAAA,SACAH,eAACoH,EAAM,CACLvH,MAAO,GACPQ,MAAM,UACNgH,YAAaC,EAAmB,IAAIpH,SAAA,CAEpCC,cAAA,OAAKT,UAAU,eAAcQ,SAAC,OAC9BF,eAACoH,EAAM,CACLvH,MAAO,GACPQ,MAAM,UACNgH,YAAaC,EAAmB,IAAIpH,SAAA,CAEpCC,cAAA,OAAKT,UAAU,eAAcQ,SAAC,OAC9BC,cAACiH,EAAM,CACLvH,MAAO,GACPQ,MAAM,UACNgH,YAAaC,EAAmB,IAAIpH,SAEpCC,cAAA,OAAKT,UAAU,eAAcQ,SAAC,SAEhCC,cAAA,OAAKT,UAAU,eAAcQ,SAAC,UAEhCC,cAAA,OAAKT,UAAU,eAAcQ,SAAC,kBAMtCC,cAAA,OAAKT,UAAU,0BAAyBQ,SAAC,6BAE7C,EAEe,oBACbF,eAACD,WAAc,CAAAG,SAAA,CACbF,eAAA,KAAAE,SAAA,CAAG,gEAEDC,cAAA,YAEFA,cAAC8E,EAAa,MAEjB,ECnGKyC,G,MAAG,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,OAAAK,YAAA,KAAAL,GAAAG,EAAAjF,MAAA,KAAAC,UAAA,CAwBN,OAxBMmF,YAAAN,EAAA,EAAAO,IAAA,SAAApI,MACP,WACE,OACEG,eAAA,OAAKN,UAAU,MAAKQ,SAAA,CAClBF,eAAA,UAAQN,UAAU,aAAYQ,SAAA,CAC5BC,cAAA,MAAIT,UAAU,YAAWQ,SAAC,6BAC1BF,eAAA,QAAAE,SAAA,CACEC,cAAC+H,IAAO,CAACC,GAAG,kBAAiBjI,SAAC,eAC9BC,cAAC+H,IAAO,CAACC,GAAG,iBAAgBjI,SAAC,cAC7BC,cAAC+H,IAAO,CAACC,GAAG,mBAAkBjI,SAAC,gBAC/BC,cAAC+H,IAAO,CAACC,GAAG,cAAajI,SAAC,kBAG9BC,cAAA,WAAAD,SACEF,eAACoI,IAAM,CAAAlI,SAAA,CACLC,cAACkI,IAAK,CAACC,KAAK,kBAAkBC,UAAWC,IACzCrI,cAACkI,IAAK,CAACC,KAAK,iBAAiBC,UAAWE,IACxCtI,cAACkI,IAAK,CAACC,KAAK,mBAAmBC,UAAWG,IAC1CvI,cAACkI,IAAK,CAACC,KAAK,cAAcC,UAAWI,IACrCxI,cAACyI,IAAQ,CAACT,GAAG,2BAKvB,KAACT,CAAA,CAxBM,CAAS3H,cA2BH2H,I,MC1BKmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPNC,SACE/I,cAACgJ,IAAU,CAAAjJ,SACTC,cAACuH,EAAG,MAENlG,SAAS4H,eAAe,SDuGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,YACf,G","file":"static/js/main.abdb0cbf.chunk.js","sourcesContent":["import * as React from \"react\";\n\nimport {\n  DragDropContainer,\n  Draggable,\n  Droppable,\n  defaultPostProcessor,\n  WithDragProps,\n} from \"react-draggable-hoc\";\n\nconst sleep = (ms?: number) => {\n  return new Promise<void>((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n};\n\nconst randomColor = () => {\n  const randomPart = () => Math.floor(Math.random() * 255);\n  return \"rgb(\" + randomPart() + \",\" + randomPart() + \",\" + randomPart() + \")\";\n};\n\ntype DraggedPropsType = ReturnType<typeof randomColor>;\n\n// use a separate component to create a ghost\nconst ContentElement = ({ className = \"\", style, handleRef, value }: any) => {\n  const ref = React.useRef(null);\n  return (\n    <span style={style} className={`Cell ${className}`}>\n      <div className=\"handle\" ref={handleRef}>\n        <div className=\"bar\" style={{ backgroundColor: style.color }} />\n        <div className=\"bar\" style={{ backgroundColor: style.color }} />\n        <div className=\"bar\" style={{ backgroundColor: style.color }} />\n      </div>\n      <span ref={ref}>{value}</span>\n    </span>\n  );\n};\n\ninterface IContentProps {\n  value: string;\n  backgroundColor: string;\n  draggedProps?: DraggedPropsType;\n}\n\n// stick to line\nconst postProcess = (props: any, ref: React.RefObject<any>) => {\n  return {\n    ...defaultPostProcessor(props, ref),\n    deltaY: ref && ref.current ? ref.current.clientHeight : 0,\n  };\n};\n\nconst Content = ({ backgroundColor, value, draggedProps }: IContentProps) => {\n  const [color, changeColor] = React.useState<string>();\n\n  return (\n    <Draggable\n      delay={20}\n      dragProps={backgroundColor}\n      postProcess={postProcess}\n      onDragStart={() => {\n        document.body.style.cursor = \"ew-resize\";\n      }}\n      onDragEnd={() => {\n        document.body.style.cursor = \"initial\";\n      }}\n    >\n      {({ handleRef, isDetached }) =>\n        handleRef != null ? (\n          <Droppable\n            onDrop={async ({ dragProps }) => {\n              await sleep(0);\n              if (dragProps !== backgroundColor) {\n                changeColor(dragProps as string);\n              }\n            }}\n            method={(state, nodeRef) => {\n              const a = nodeRef.current.getBoundingClientRect();\n              const { x } = state.current!;\n\n              return a.left <= x && a.right >= x;\n            }}\n            disabled={handleRef == null}\n            withDragProps={false}\n          >\n            {({ isHovered, ref }) => (\n              <div\n                style={{\n                  display: \"inline-block\",\n                  textAlign: \"left\",\n                  position: \"relative\",\n                }}\n                ref={ref}\n              >\n                {/* change text color when element is dragged */}\n                <ContentElement\n                  value={\n                    draggedProps\n                      ? draggedProps === backgroundColor\n                        ? isHovered\n                          ? \"Not here\"\n                          : \"I'm dragged\"\n                        : isHovered\n                          ? \"Drop here\"\n                          : \"Hover me\"\n                      : value\n                  }\n                  style={{\n                    backgroundColor,\n                    color: isDetached ? \"#fff\" : color,\n                    width: \"100px\",\n                  }}\n                  className={\n                    isHovered && draggedProps !== backgroundColor\n                      ? \"hovered\"\n                      : undefined\n                  }\n                  handleRef={handleRef}\n                />\n              </div>\n            )}\n          </Droppable>\n        ) : (\n          <ContentElement\n            value={value}\n            style={{\n              backgroundColor,\n              color,\n              width: \"100px\",\n            }}\n          />\n        )\n      }\n    </Draggable>\n  );\n};\n\nconst randomColors = Array(3000)\n  .fill(0)\n  .map(() => randomColor());\n\nexport const GhostExample = () => {\n  return (\n    <DragDropContainer className=\"Ghost-container\">\n      {({ ref }) => (\n        <WithDragProps>\n          {({ dragProps: draggedProps }) => (\n            <div className=\"Ghost-container\" ref={ref}>\n              {randomColors.map((color, i) => (\n                <Content\n                  backgroundColor={color}\n                  value={`Drag me`}\n                  key={i}\n                  draggedProps={draggedProps}\n                />\n              ))}\n            </div>\n          )}\n        </WithDragProps>\n      )}\n    </DragDropContainer>\n  );\n};\n\nexport const GhostExampleTitle = () => (\n  <p>\n    Scrollable container, <br />\n    draggable and droppable elements <br />\n    with a ghost stuck to row bottom <br />\n    custom hover implementation <br />\n    drag handle <br />\n    delay of 20ms (scroll is still preserved) <br />\n    and fixed body <br />\n    ew-resize cursor on drag\n  </p>\n);\n\nexport default () => {\n  React.useEffect(() => {\n    document.body.style.position = \"fixed\";\n\n    return () => {\n      document.body.style.position = \"initial\";\n    };\n  });\n\n  return (\n    <React.Fragment>\n      <GhostExampleTitle />\n      <GhostExample />\n    </React.Fragment>\n  );\n};\n","import * as React from \"react\";\n\nimport { DragDropContainer, Draggable, Droppable } from \"react-draggable-hoc\";\n\nconst initialValues = Array(20)\n  .fill(undefined)\n  .map((_, i) => i + 1);\n\nexport const SimpleExample = () => {\n  const [dropped, changeDropped] = React.useState<number[]>([]);\n  const values = React.useMemo(\n    () => initialValues.filter((v) => dropped.indexOf(v) < 0),\n    [dropped],\n  );\n\n  const onDrop: React.ComponentProps<typeof Droppable>[\"onDrop\"] = ({\n    dragProps,\n  }) => {\n    changeDropped([...dropped, dragProps as number]);\n  };\n\n  return (\n    <DragDropContainer className=\"Simple-page-container\">\n      <div className=\"Simple-row scrollable\">\n        {values.map((i) => (\n          <Draggable key={i} dragProps={i} className=\"Simple-cell\">\n            <div className=\"Cell-simple\">\n              <span className=\"Handle\">::</span>\n              <span>{i}</span>\n            </div>\n          </Draggable>\n        ))}\n      </div>\n      {values.length > 0 ? (\n        <Droppable onDrop={onDrop}>\n          {({ isHovered, ref, dragProps }) => (\n            <div\n              className=\"Simple-bin\"\n              ref={ref}\n              style={{\n                backgroundColor: isHovered\n                  ? \"rgba(0, 130, 20, 0.2)\"\n                  : undefined,\n                border: dragProps ? \"1px dashed #ccc\" : undefined,\n              }}\n            >\n              {dragProps ? \"Drop it here\" : \"Start dragging\"}\n              {values.length > 0 && (\n                <div>Dropped values: [{dropped.join(\", \")}]</div>\n              )}\n            </div>\n          )}\n        </Droppable>\n      ) : (\n        <div className=\"Simple-bin\">Congratulations, You Win!</div>\n      )}\n    </DragDropContainer>\n  );\n};\n\nexport default () => (\n  <React.Fragment>\n    <p>\n      Simple `Draggable` and And a single `Droppable` bin\n      <br />\n    </p>\n    <SimpleExample />\n  </React.Fragment>\n);\n","import * as React from \"react\";\n\nimport {\n  DragDropContainer,\n  Draggable,\n  useDroppable,\n  useDragProps,\n} from \"react-draggable-hoc\";\n\nconst colors = [\"Plum\", \"CornflowerBlue\"];\n\nconst initialValues = Array(colors.length * 10)\n  .fill(undefined)\n  .map((_, i) => i + 1);\n\nconst maxDroppedPerBin = initialValues.length / colors.length;\n\ntype DragProps = {\n  color: \"string\";\n  i: number;\n};\n\nconst Bin = ({\n  handleDrop,\n  color,\n  onFill,\n}: {\n  handleDrop: (props: DragProps) => any;\n  color: string;\n  onFill: () => void;\n}) => {\n  const ref = React.useRef(null);\n  const [droppedCount, changeDroppedCount] = React.useState(0);\n\n  const validateDragProps = React.useCallback(\n    (props: DragProps) => props == null || props.color === color,\n    [color],\n  );\n\n  const { isHovered } = useDroppable(ref, {\n    onDrop: ({ dragProps }) => {\n      if (validateDragProps(dragProps)) {\n        changeDroppedCount(droppedCount + 1);\n        handleDrop(dragProps);\n      }\n    },\n  });\n\n  const dragProps = useDragProps();\n\n  const dragPropsValid = React.useMemo(() => {\n    return validateDragProps(dragProps);\n  }, [dragProps, validateDragProps]);\n\n  const filled = React.useMemo(() => {\n    return (100 * droppedCount) / maxDroppedPerBin;\n  }, [droppedCount]);\n\n  const added = React.useMemo(() => {\n    return isHovered ? 100 / maxDroppedPerBin : 0;\n  }, [isHovered]);\n\n  React.useEffect(() => {\n    if (filled) onFill();\n  }, [filled, onFill]);\n\n  return (\n    <div\n      className=\"Simple-bin\"\n      ref={ref}\n      style={{\n        visibility: dragPropsValid ? undefined : \"hidden\",\n        border: dragProps ? \"1px dashed #ccc\" : \"1px dashed transparent\",\n        position: \"relative\",\n      }}\n    >\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          display: \"flex\",\n        }}\n      >\n        <div\n          style={{\n            width: `${filled}%`,\n            background: color,\n            transition: \"all linear 40ms\",\n          }}\n        />\n        <div\n          style={{\n            width: `${added}%`,\n            background: `linear-gradient(to right, ${color}, #eee)`,\n            transition: \"all linear 40ms\",\n          }}\n        />\n      </div>\n      <div style={{ position: \"relative\" }}>\n        <span style={{ color }}>{color}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const SimpleExample = () => {\n  const [values, changeValues] = React.useState(initialValues);\n  const [color, changeColor] = React.useState<string>();\n\n  const handleDrop = (dragProps: DragProps) => {\n    changeValues(values.filter((v) => v !== dragProps.i));\n  };\n\n  return (\n    <DragDropContainer className=\"Simple-page-container\">\n      <div className=\"Simple-row scrollable\">\n        {values.map((i) => (\n          <Draggable\n            key={i}\n            dragProps={{ color: colors[i % colors.length], i }}\n            className=\"Simple-cell\"\n          >\n            <div\n              className=\"Cell-simple\"\n              style={{ backgroundColor: colors[i % colors.length] }}\n            >\n              <span style={{ color: \"#fff\" }}>{i}</span>\n            </div>\n          </Draggable>\n        ))}\n      </div>\n      {values.length > 0 ? (\n        <div className=\"Bins-container\">\n          {[...Array(colors.length)].map((_, i) => (\n            <Bin\n              handleDrop={handleDrop}\n              color={colors[i % colors.length]}\n              onFill={() => {\n                if (color == null) changeColor(colors[i % colors.length]);\n              }}\n              key={i}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"Simple-bin\">\n          <span style={{ color }}>Congratulations!</span>\n          <span>You win!</span>\n        </div>\n      )}\n    </DragDropContainer>\n  );\n};\n\nexport default () => (\n  <React.Fragment>\n    <p>\n      Simple `Draggable` and multiple droppable bins defined by `useDroppable`\n      <br />\n    </p>\n    <SimpleExample />\n  </React.Fragment>\n);\n","import * as React from \"react\";\n\nimport { DragDropContainer, Draggable, Droppable } from \"react-draggable-hoc\";\n\nconst Target = ({\n  value,\n  color,\n  changeValue,\n  children,\n}: {\n  value: number;\n  color: string;\n  changeValue: (v: number) => void;\n  children?: any;\n}) => (\n  <Droppable\n    onDrop={() => {\n      changeValue(value);\n    }}\n    withDragProps={false}\n  >\n    {({ isHovered, ref, dragProps }) => (\n      <div\n        className=\"Target\"\n        ref={ref}\n        style={{\n          backgroundColor: isHovered ? \"rgba(0, 0, 110)\" : color,\n          border: dragProps ? \"1px dashed #ccc\" : undefined,\n        }}\n      >\n        {children}\n      </div>\n    )}\n  </Droppable>\n);\n\nexport const SimpleExample = () => {\n  const [value, changeValue] = React.useState(0);\n  const changeValueFactory = (v: number) => () => changeValue(value + v);\n\n  return value < 300 ? (\n    <>\n      <div>Your current score: {value}</div>\n      <DragDropContainer style={{ width: 400, margin: \"auto\" }}>\n        <>\n          <br />\n          <Draggable\n            dragProps=\"missile\"\n            className=\"Missile-Wrapper\"\n            detachDelta={0}\n            onDragStart={() => {\n              document.body.style.cursor = \"grabbing\";\n            }}\n            onDragEnd={() => {\n              document.body.style.cursor = \"initial\";\n            }}\n          >\n            {({ handleRef, isDetached }) => (\n              <div\n                ref={handleRef}\n                className=\"Missile\"\n                style={\n                  handleRef != null && isDetached\n                    ? { visibility: \"hidden\" }\n                    : undefined\n                }\n              />\n            )}\n          </Draggable>\n          <br />\n          <Target\n            value={10}\n            color=\"#f7d916\"\n            changeValue={changeValueFactory(10)}\n          >\n            <div className=\"Target-Value\">10</div>\n            <Target\n              value={25}\n              color=\"#f72116\"\n              changeValue={changeValueFactory(25)}\n            >\n              <div className=\"Target-Value\">25</div>\n              <Target\n                value={50}\n                color=\"#f7d916\"\n                changeValue={changeValueFactory(50)}\n              >\n                <div className=\"Target-Value\">50</div>\n              </Target>\n              <div className=\"Target-Value\">25</div>\n            </Target>\n            <div className=\"Target-Value\">10</div>\n          </Target>\n        </>\n      </DragDropContainer>\n    </>\n  ) : (\n    <div className=\"Congrats-page-container\">Congratulations, You Win!</div>\n  );\n};\n\nexport default () => (\n  <React.Fragment>\n    <p>\n      `Draggable` with hidden host and And nested `Droppable` bins.\n      <br />\n    </p>\n    <SimpleExample />\n  </React.Fragment>\n);\n","import * as React from \"react\";\nimport { NavLink, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport Ghost from \"./Ghost\";\nimport SingleBin from \"./SingleBin\";\nimport MultiBin from \"./MultiBin\";\nimport NestedBins from \"./NestedBins\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  public render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">react-draggable-hoc demo</h1>\n          <menu>\n            <NavLink to=\"/demo/singleBin\">Single bin</NavLink>\n            <NavLink to=\"/demo/multiBin\">Multi bin</NavLink>\n            <NavLink to=\"/demo/nestedBins\">Nested bins</NavLink>\n            <NavLink to=\"/demo/ghost\">Complex</NavLink>\n          </menu>\n        </header>\n        <section>\n          <Switch>\n            <Route path=\"/demo/singleBin\" component={SingleBin} />\n            <Route path=\"/demo/multiBin\" component={MultiBin} />\n            <Route path=\"/demo/nestedBins\" component={NestedBins} />\n            <Route path=\"/demo/ghost\" component={Ghost} />\n            <Redirect to=\"/demo/singleBin\" />\n          </Switch>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"raf/polyfill\";\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport \"./index.css\";\nimport { unregister } from \"./registerServiceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\"),\n);\nunregister();\n"],"sourceRoot":""}